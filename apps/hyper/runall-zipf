#!/usr/bin/python
#
# run all tests
#

import os
import sys
import signal
import time
import subprocess


def signal_handler(signal,frame):
  print "bye\n"
  sys.exit(0)
signal.signal(signal.SIGINT,signal_handler)

def shellGetOutput(str) :
  process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
  output, err = process.communicate()
  
  if (len(err) > 0):
      raise NameError(str+"\n"+output+err)
  return output

dataDir = "../../inputs/"

applications = ["HyperBFS","HyperBC","HyperCC","HyperPageRank","HyperKCore-Efficient","HyperKCore"]
mis = ["HyperMIS"]

#applications = ["HyperKCore","HyperKCore-Efficient"]
wapplications = ["HyperSSSP"]

testfiles = [("zipf-10M-10M-10-2","0"),("zipf-100M-100M-10-2","0")]
wtestfiles = [("zipf-10M-10M-10-2-wgh","0"),("zipf-100M-100M-10-2-wgh","0")]

processors = [1,2,4]+range(8,144+1,8)

#os.system("make clean; make -j16; ~/hog2 250")
for app in applications:
  for testfile in testfiles :
    for p in processors :
      if p <= 4:
        ss = "export CILK_NWORKERS="+`p`+"; ./"+app+' -s -rounds 1 -maxiters 1 -r '+testfile[1]+' '+dataDir+testfile[0]
      elif p < 72:
        ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s -rounds 1 -maxiters 1 -r '+testfile[1]+ ' ' + dataDir + testfile[0]
      else:
        ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s -maxiters 1 -r '+testfile[1]+ ' ' + dataDir + testfile[0]
      print app+" "+`p` + " " + testfile[0] 
      print shellGetOutput(ss)
      sys.stdout.flush()

for app in mis:
  for testfile in testfiles :
    for p in processors :
      if p == 1:
        ss = "export CILK_NWORKERS=1; ./"+app+' -s -rounds 0 -maxiters 1 -r '+testfile[1]+' '+dataDir+testfile[0]
      else:
        ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s -rounds 0 -maxiters 1 -r '+testfile[1]+ ' ' + dataDir + testfile[0]
      print app+" "+`p` + " " + testfile[0] 
      print shellGetOutput(ss)
      sys.stdout.flush()

for app in wapplications:
  for testfile in wtestfiles :
    for p in processors :
      if p == 1:
        ss = "export CILK_NWORKERS=1; ./"+app+' -s -rounds 1 -r '+testfile[1]+' '+dataDir+testfile[0]
      else:
        ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s -r '+testfile[1]+' ' + dataDir + testfile[0]
      print app+" "+`p` + " " + testfile[0]
      print shellGetOutput(ss)
      sys.stdout.flush()



# for app in applications:
#   for p in processors :
#     if p == 1:
#       ss = "CILK_NWORKERS="+`p`+" ./" + app + " -rounds 1 -r 1 data/twitter_J"
#     else:
#       ss = "CILK_NWORKERS="+`p`+" numactl -i all ./" + app + " -r 1 data/twitter_J"
#     print app+" "+`p` + " twitter"
#     print shellGetOutput(ss)
#     sys.stdout.flush()


# for app in wapplications:
#   for p in processors :
#     if p == 1:
#       ss = "CILK_NWORKERS="+`p`+" ./" + app + " -rounds 1 -r 1 data/twitter_WJ"
#     else:
#       ss = "CILK_NWORKERS="+`p`+" numactl -i all ./" + app + " -r 1 data/twitter_WJ"
#     print app+" "+`p` + " twitter"
#     print shellGetOutput(ss)
#     sys.stdout.flush()

sys.exit()
os.system("make clean; LONG=1 make -j16; ~/hog2 250")

for app in applications+wapplications:
  for p in processors:
    if p == 1:
      ss = "CILK_NWORKERS="+`p`+" ./"+app+" -b -rounds 1 -r 20000000 data/uk-union-2006-06-2007-05_J_reordered"
    else:
      ss = "CILK_NWORKERS="+`p`+" numactl -i all ./"+app+" -b -r 20000000 data/uk-union-2006-06-2007-05_J_reordered"
    print app+" "+`p`+" uk-union-reordered"
    print shellGetOutput(ss)
    sys.stdout.flush()


  # ss = "export CILK_NWORKERS=1; ./"+app+" data/yahoo -s -b"
  # print app+" 1 yahoo"
  # print shellGetOutput(ss)
  # sys.stdout.flush()

# os.system("~/hog2 200")

# for app in wapplications+["PageRank"]:
#   ss = "export CILK_NWORKERS=80; ./"+app+" ~/data/yahoograph/yahoows -s -b"
#   print app+" 80 yahoo"
#   print shellGetOutput(ss)
#   sys.stdout.flush()

#   ss = "export CILK_NWORKERS=1; ./"+app+" ~/data/yahoograph/yahoows -s -b"
#   print app+" 1 yahoo"
#   print shellGetOutput(ss)
#   sys.stdout.flush()
