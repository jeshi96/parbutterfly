#!/usr/bin/python
#
# run all tests
#

import os
import sys
import signal
import time
import subprocess


def signal_handler(signal,frame):
  print "bye\n"
  sys.exit(0)
signal.signal(signal.SIGINT,signal_handler)

def shellGetOutput(str) :
  process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
  output, err = process.communicate()
  
  if (len(err) > 0):
      raise NameError(str+"\n"+output+err)
  return output

dataDir = "../../inputs/"

applications = ["HyperBFS","HyperBC","HyperCC","HyperPageRank","HyperKCore-Efficient"]
mis = ["HyperMIS"]
wapplications = ["HyperSSSP"]

testfiles = [("com-orkut-ligra","0"),("com-friendster-ligra","0"),("rand-10M-10M-10","0"),("rand-10M-10M-100","0"),("rand-10M-20M-10","0"),("rand-10M-30M-10","0"),("rand-10M-40M-10","0"),("rand-10M-50M-10","0"),("rand-10M-60M-10","0"),("rand-10M-70M-10","0"),("rand-10M-80M-10","0"),("rand-10M-90M-10","0"),("rand-10M-100M-10","0"),("rand-100M-100M-10","0")]

wtestfiles = [("com-orkut-ligra-wgh","0"),("com-friendster-ligra-wgh","0"),("rand-10M-10M-10-wgh","0"),("rand-10M-10M-100-wgh","0"),("rand-10M-20M-10-wgh","0"),("rand-10M-30M-10-wgh","0"),("rand-10M-40M-10-wgh","0"),("rand-10M-50M-10-wgh","0"),("rand-10M-60M-10-wgh","0"),("rand-10M-70M-10-wgh","0"),("rand-10M-80M-10-wgh","0"),("rand-10M-90M-10-wgh","0"),("rand-10M-100M-10-wgh","0"),("rand-100M-100M-10-wgh","0")]

processors = [1,2,4]+range(8,144+1,8)
processors = [144]
#os.system("make clean; make -j16; ~/hog2 250")
for app in applications:
  for testfile in testfiles :
    for p in processors :
      if p == 1:
        ss = "export CILK_NWORKERS=1; ./"+app+' -s -rounds 1 -maxiters 1 -r '+testfile[1]+' '+dataDir+testfile[0]
      else:
        ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s -maxiters 1 -r '+testfile[1]+ ' ' + dataDir + testfile[0]
      print app+" "+`p` + " " + testfile[0] 
      print shellGetOutput(ss)
      sys.stdout.flush()

for app in mis:
  for testfile in testfiles :
    for p in processors :
      if p == 1:
        ss = "export CILK_NWORKERS=1; ./"+app+' -s -rounds 0 -maxiters 1 -r '+testfile[1]+' '+dataDir+testfile[0]
      else:
        ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s -rounds 0 -maxiters 1 -r '+testfile[1]+ ' ' + dataDir + testfile[0]
      print app+" "+`p` + " " + testfile[0] 
      print shellGetOutput(ss)
      sys.stdout.flush()

for app in wapplications:
  for testfile in wtestfiles :
    for p in processors :
      if p == 1:
        ss = "export CILK_NWORKERS=1; ./"+app+' -s -rounds 1 -r '+testfile[1]+' '+dataDir+testfile[0]
      else:
        ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s -r '+testfile[1]+' ' + dataDir + testfile[0]
      print app+" "+`p` + " " + testfile[0]
      print shellGetOutput(ss)
      sys.stdout.flush()
