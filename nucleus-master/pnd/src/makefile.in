MODE=gcc
DEBUG=no
OPT=yes
SUBG=no
IMPR=no
NODENSITY=no

PARALLEL=yes
TYPE=ASYNC

ifeq ($(MODE),gcc)
# ------- LINUX ----------
ccc = gcc
CC        = gcc
CXX        = g++
LD         = g++
CFLAGS     += $(FLAGS) -Wstrict-prototypes
CXXFLAGS   += $(FLAGS) -std=c++14
LDFLAGS    = $(FLAGS) -std=c++14
endif

ifeq ($(MODE),icc)
# ------- LINUX ----------
ccc        = icc
CXX=icpc
CFLAGS     =
CXXFLAGS   =
LDFLAGS    =
LD=icpc
endif


ifeq ($(PARALLEL), yes)
LDFLAGS += -fopenmp
CFLAGS	+= -fopenmp
CXXFLAGS += -fopenmp
endif


ifeq ($(WARN),yes)
FLAGS      = -Wall -W -Wextra
endif

ifeq ($(DEBUG),yes)
CFLAGS    += -g 
CXXFLAGS    += -g 
LDFLAGS   += -g 
endif

ifeq ($(OPT),yes)
CFLAGS    += -O2 -DNDEBUG
CXXFLAGS    += -O2 -DNDEBUG
LDFLAGS   += -DNDEBUG
endif

ifeq ($(FAST), yes)
CFLAGS	+= -D FAST
CXXFLAGS += -D FAST
endif

ifeq ($(SHORT), yes)
CFLAGS	+= -D SHORT
CXXFLAGS += -D SHORT
endif

ifeq ($(CONSTRUCT), yes)
CFLAGS	+= -D CONSTRUCT
CXXFLAGS += -D CONSTRUCT
endif

ifeq ($(TYPE), SYNC)
CFLAGS	+= -D SYNC
CXXFLAGS += -D SYNC
endif

ifeq ($(TYPE), ASYNC)
CFLAGS	+= -D ASYNC
CXXFLAGS += -D ASYNC
endif

ifeq ($(DUMP_K), yes)
CFLAGS	+= -D DUMP_K
CXXFLAGS += -D DUMP_K
endif

ifeq ($(DUMP_Hs), yes)
CFLAGS	+= -D DUMP_Hs
CXXFLAGS += -D DUMP_Hs
endif

ifeq ($(RANDOM), yes)
CFLAGS	+= -D RANDOM
CXXFLAGS += -D RANDOM
endif

ifeq ($(TRG), yes)
CFLAGS	+= -D TRG
CXXFLAGS += -D TRG
endif

ifeq ($(DEBUG_0), yes)
CFLAGS	+= -D DEBUG_0
CXXFLAGS += -D DEBUG_0
endif

ifeq ($(DEBUG_00), yes)
CFLAGS	+= -D DEBUG_00
CXXFLAGS += -D DEBUG_00
endif

ifeq ($(DEBUG_1), yes)
CFLAGS	+= -D DEBUG_1
CXXFLAGS += -D DEBUG_1
endif


ifeq ($(SUBG), yes)
CFLAGS	+= -D SUBG
CXXFLAGS += -D SUBG
endif

ifeq ($(NODENSITY), yes)
CFLAGS	+= -D IMPR
CXXFLAGS += -D IMPR
endif

AR         = ar rv
RANLIB     = ranlib

INC        = 
LIBS       = -lm


.SUFFIXES:
.SUFFIXES: .o .cpp
.SUFFIXES: .o .c

.c.o: 
	$(ccc) $(CFLAGS) $(INCLUDES) -c $*.c -o $@

.cpp.o: 
	$(CXX) $(CXXFLAGS) $(INCLUDES) -c $*.cpp -o $@
	

  
